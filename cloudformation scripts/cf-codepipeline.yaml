Resources:
  #Connection resource to GitHub
  CodeStarConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: GitHubConnectionForCf
      ProviderType: GitHub

  # S3 Bucket for Pipeline Artifacts
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: cf-pipeline-artifacts

  # CodePipeline Service Role
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - ec2:*
                  - iam:PassRole
                  - codedeploy:*
                  - codestar-connections:*
                Resource: "*"

  # CodeBuild Service Role
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - ec2:*
                  - logs:*
                  - codecommit:*
                  - iam:PassRole
                  - ecr:GetAuthorizationToken
                  - ssm:GetParameters
                Resource: "*"

  # CodeDeploy Role
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:*
                  - s3:*
                  - codedeploy:*
                  - logs:*
                  - autoscaling:CompleteLifecycleAction
                  - autoscaling:DeleteLifecycleHook
                  - autoscaling:DescribeLifecycleHooks
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:PutLifecycleHook
                  - autoscaling:RecordLifecycleActionHeartbeat
                Resource: "*"

  # CodePipeline
  ApplicationPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: GallerySourceArtifact
              Configuration:
                FullRepositoryId: foreveranoobie/aws-gallery
                BranchName: main
                ConnectionArn: !Ref CodeStarConnection
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: GallerySourceArtifact
              OutputArtifacts:
                - Name: GalleryBuildArtifact
              Configuration:
                ProjectName: !Ref BuildProject
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: "1"
              InputArtifacts:
                - Name: GalleryBuildArtifact
              Configuration:
                ApplicationName: !Ref ApplicationName
                DeploymentGroupName: !Ref DeploymentGroupName

  # CodeBuild Project
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: CFCodeBuild
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildpsec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      TimeoutInMinutes: 30

  # CodeDeploy Application
  ApplicationName:
    Type: AWS::CodeDeploy::Application

  # Deployment Group for EC2
  DeploymentGroupName:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref ApplicationName
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
              - Key: CodeDeployTag
                Value: CFInstance
                Type: KEY_AND_VALUE

Outputs:
  PipelineName:
    Description: The name of the CodePipeline
    Value: !Ref ApplicationPipeline